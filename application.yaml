---
- hosts: jenkins
  become: yes
  tasks:
  - name: Transfer The Script
    template:
      src: bash/dependency-jenkins.sh
      dest: /var/tmp/
      owner: root
      group: root
      mode: '0777'

  - name: Excetu The Script
    command: sh /var/tmp/dependency-jenkins.sh

  - name: Import Jenkins GPG Key
    apt_key:
      url: "https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key"
      state: present
    become: yes

  - name: Add Jenkins repository
    apt_repository:
      repo: 'deb https://pkg.jenkins.io/debian-stable binary/'
      state: present

  - name: Update apt package cache
    apt:
      update_cache: yes
      state: latest

  - name: Install Java
    apt:
      name: openjdk-8-jdk
      state: present

  - name: Install Jenkins
    apt:
      name: jenkins
      state: present

  - name: Start Jenkins Service
    service:
      name: jenkins
      enabled: true
      state: started

- hosts: haproxy
  become: yes
  tasks:
  - name: "apt-get update"
    apt:
      update_cache: yes
      cache_valid_time: 3600

  - name: Install HAProxy
    apt:
      name: haproxy
      state: present

  - name: Copy Configuration File
    template:
      src: haproxy/haproxy.cfg
      dest: /etc/haproxy/

  - name: Start Haproxy Service
    service:
      name: haproxy
      state: started

- hosts: webserver
  become: yes
  tasks:
  - name: "apt-get update"
    apt:
      update_cache: yes
      cache_valid_time: 3600

  - name: "install nginx"
    apt:
      name: ['nginx']
      state: latest

  - name: "create www directory"
    file:
      path: /var/www/{{ domain }}
      state: directory
      mode: '0775'
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"

  - name: "sync website"
    synchronize:
      src: site/inventory
      dest: /var/www/{{ domain }}
      archive: no
      checksum: yes
      recursive: yes
      delete: yes
    become: no

  - name: delete default nginx site
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    notify: restart nginx

  - name: copy nginx site.conf
    template:
      src: files/nginx.conf.j2
      dest: /etc/nginx/sites-enabled/{{ domain }}
      owner: root
      group: root
      mode: '0644'
    notify: restart nginx

  - name: Installation PHP 8.1
    apt:
      name: "{{ item }}"
      state: present
    loop:
      - php8.1-fpm
      - php-mysqli

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

- hosts: database
  become: yes
  tasks:
  - name: Installing Mysql  and dependencies
    package:
      name: "{{ item }}"
      state: present
      update_cache: yes
    loop:
      - mysql-server
      - mysql-client
      - python3-mysqldb
      - libmysqlclient-dev

  - name: start and enable mysql service
    service:
      name: mysql
      state: started
      enabled: yes

  - name: creating mysql user (medium_post)
    mysql_user:
      name: "{{ db_user }}"
      password: "{{ db_pass }}"
      priv: '*.*:ALL'
      host: '%'
      state: present

  - name: creating database
    mysql_db:
      name: "{{ db_name }}"
      state: present

  - name: Enable remote login to mysql
    lineinfile:
       path: /etc/mysql/mysql.conf.d/mysqld.cnf
       regexp: '^bind-address'
       line: 'bind-address = 0.0.0.0'
       backup: yes
    notify:
       - Restart mysql

  handlers:
  - name: Restart mysql
    service:
      name: mysql
      state: restarted
